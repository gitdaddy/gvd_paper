\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{sec:intro}{{1}{1}{Introduction}{section.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Related work}{1}{section.2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Sweepline Algorithm}{1}{section.3}}
\newlabel{sec:sweepline-algorithm}{{3}{1}{Sweepline Algorithm}{section.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Distance transform}{1}{section.4}}
\newlabel{sec:distance-transform}{{4}{1}{Distance transform}{section.4}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces COMPUTE\_DISTANCES\relax }}{1}{algocf.1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{alg:compute-distances}{{1}{1}{Distance transform}{algocf.1}{}}
\citation{strain1999fast}
\citation{lorensen1987marching}
\newlabel{fig:wavefront5}{{1a}{2}{Subfigure 1a}{subfigure.1.1}{}}
\newlabel{sub@fig:wavefront5}{{(a)}{a}{Subfigure 1a\relax }{subfigure.1.1}{}}
\newlabel{fig:wavefront6}{{1b}{2}{Subfigure 1b}{subfigure.1.2}{}}
\newlabel{sub@fig:wavefront6}{{(b)}{b}{Subfigure 1b\relax }{subfigure.1.2}{}}
\newlabel{fig:wavefront7}{{1c}{2}{Subfigure 1c}{subfigure.1.3}{}}
\newlabel{sub@fig:wavefront7}{{(c)}{c}{Subfigure 1c\relax }{subfigure.1.3}{}}
\newlabel{fig:wavefront2}{{1d}{2}{Subfigure 1d}{subfigure.1.4}{}}
\newlabel{sub@fig:wavefront2}{{(d)}{d}{Subfigure 1d\relax }{subfigure.1.4}{}}
\newlabel{fig:wavefront4}{{1e}{2}{Subfigure 1e}{subfigure.1.5}{}}
\newlabel{sub@fig:wavefront4}{{(e)}{e}{Subfigure 1e\relax }{subfigure.1.5}{}}
\newlabel{fig:wavefront6-gvd}{{1f}{2}{Subfigure 1f}{subfigure.1.6}{}}
\newlabel{sub@fig:wavefront6-gvd}{{(f)}{f}{Subfigure 1f\relax }{subfigure.1.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Wavefront expansion. \subref {fig:wavefront5} Portions of the surfaces of two objects. Assign every nonempty vertex an exact closest point and add the vertex to the wavefront priority queue. \subref {fig:wavefront6} Pop the top priority vertex (dotted circle) and push its closest point to its neighbors (circle). \subref {fig:wavefront7} Next iteration. \subref {fig:wavefront2} Initialized wavefront (as in \subref {fig:wavefront6}). \subref {fig:wavefront4} Expanded wavefront. Green lines connect quadtree vertices to computed closest points. \subref {fig:wavefront6-gvd} The GVD is shown in red. \relax }}{2}{figure.caption.2}}
\newlabel{fig:wavefront}{{1}{2}{Wavefront expansion. \protect \subref {fig:wavefront5} Portions of the surfaces of two objects. Assign every nonempty vertex an exact closest point and add the vertex to the wavefront priority queue. \protect \subref {fig:wavefront6} Pop the top priority vertex (dotted circle) and push its closest point to its neighbors (circle). \protect \subref {fig:wavefront7} Next iteration. \protect \subref {fig:wavefront2} Initialized wavefront (as in \protect \subref {fig:wavefront6}). \protect \subref {fig:wavefront4} Expanded wavefront. Green lines connect quadtree vertices to computed closest points. \protect \subref {fig:wavefront6-gvd} The GVD is shown in red. \relax }{figure.caption.2}{}}
\@writefile{brf}{\backcite{strain1999fast}{{2}{4}{algocf.1}}}
\newlabel{fig:ambiguous3}{{2a}{2}{Subfigure 2a}{subfigure.2.1}{}}
\newlabel{sub@fig:ambiguous3}{{(a)}{a}{Subfigure 2a\relax }{subfigure.2.1}{}}
\newlabel{fig:ambiguous4}{{2b}{2}{Subfigure 2b}{subfigure.2.2}{}}
\newlabel{sub@fig:ambiguous4}{{(b)}{b}{Subfigure 2b\relax }{subfigure.2.2}{}}
\newlabel{fig:ambiguous5}{{2c}{2}{Subfigure 2c}{subfigure.2.3}{}}
\newlabel{sub@fig:ambiguous5}{{(c)}{c}{Subfigure 2c\relax }{subfigure.2.3}{}}
\newlabel{fig:ambiguous1}{{2d}{2}{Subfigure 2d}{subfigure.2.4}{}}
\newlabel{sub@fig:ambiguous1}{{(d)}{d}{Subfigure 2d\relax }{subfigure.2.4}{}}
\newlabel{fig:ambiguous2}{{2e}{2}{Subfigure 2e}{subfigure.2.5}{}}
\newlabel{sub@fig:ambiguous2}{{(e)}{e}{Subfigure 2e\relax }{subfigure.2.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  Ambiguous cells are detected by collapsing edges with identically labeled vertices. \subref {fig:ambiguous3} Cell $x$ is ambiguous because $\overline  {G_x}$ is not a simplex. \subref {fig:ambiguous4}-\subref {fig:ambiguous5} Two possible GVD topologies in cell $x$ are shown. \subref {fig:ambiguous1} Cell $y$ is unambigous. \subref {fig:ambiguous2} Simplex $\overline  {G_y}$ induces a unique GVD topology. \relax }}{2}{figure.caption.3}}
\newlabel{fig:ambiguous}{{2}{2}{Ambiguous cells are detected by collapsing edges with identically labeled vertices. \protect \subref {fig:ambiguous3} Cell $x$ is ambiguous because $\overline {G_x}$ is not a simplex. \protect \subref {fig:ambiguous4}-\protect \subref {fig:ambiguous5} Two possible GVD topologies in cell $x$ are shown. \protect \subref {fig:ambiguous1} Cell $y$ is unambigous. \protect \subref {fig:ambiguous2} Simplex $\overline {G_y}$ induces a unique GVD topology. \relax }{figure.caption.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Resolve ambiguities}{2}{section.5}}
\citation{natarajan1994generating,nielson1991asymptotic,sohn2007topology}
\newlabel{fig:bisector-ambiguity0}{{3a}{3}{Subfigure 3a}{subfigure.3.1}{}}
\newlabel{sub@fig:bisector-ambiguity0}{{(a)}{a}{Subfigure 3a\relax }{subfigure.3.1}{}}
\newlabel{fig:bisector-ambiguity1}{{3b}{3}{Subfigure 3b}{subfigure.3.2}{}}
\newlabel{sub@fig:bisector-ambiguity1}{{(b)}{b}{Subfigure 3b\relax }{subfigure.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The effect of ambiguous cells and how they are removed. \subref {fig:bisector-ambiguity0} The cells indicated by the arrows are ambiguous, causing the GVD to be topologically incorrect. \subref {fig:bisector-ambiguity1} The ambiguities are resolved by recursive subdivision.\relax }}{3}{figure.caption.4}}
\newlabel{fig:bisector-ambiguity}{{3}{3}{The effect of ambiguous cells and how they are removed. \protect \subref {fig:bisector-ambiguity0} The cells indicated by the arrows are ambiguous, causing the GVD to be topologically incorrect. \protect \subref {fig:bisector-ambiguity1} The ambiguities are resolved by recursive subdivision.\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Computing the intersection of the GVD with quadtree edge $e$. $a$ and $b$ are closest points on objects, and $p$ is the intersection of edge $e$ with the GVD. \relax }}{3}{figure.caption.5}}
\newlabel{fig:compute-q}{{4}{3}{Computing the intersection of the GVD with quadtree edge $e$. $a$ and $b$ are closest points on objects, and $p$ is the intersection of edge $e$ with the GVD. \relax }{figure.caption.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Compute GVD surface}{3}{section.6}}
\newlabel{sec:bisector}{{6}{3}{Compute GVD surface}{section.6}{}}
\@writefile{brf}{\backcite{lorensen1987marching}{{3}{6}{section.6}}}
\newlabel{fig:bisector2}{{5a}{3}{Subfigure 5a}{subfigure.5.1}{}}
\newlabel{sub@fig:bisector2}{{(a)}{a}{Subfigure 5a\relax }{subfigure.5.1}{}}
\newlabel{fig:bisector3}{{5b}{3}{Subfigure 5b}{subfigure.5.2}{}}
\newlabel{sub@fig:bisector3}{{(b)}{b}{Subfigure 5b\relax }{subfigure.5.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces GVD surface generation. \subref {fig:bisector2} The 2D algorithm creates GVD edges from bisectors $\{p_i\}$ to the centroid. Each new GVD edge is given the two labels of the incident octree edge. \subref {fig:bisector3} After finding the 2D GVD on its faces, the 3D cell fits triangles from 2D edges to the centroid. \relax }}{3}{figure.caption.6}}
\newlabel{fig:bisector}{{5}{3}{GVD surface generation. \protect \subref {fig:bisector2} The 2D algorithm creates GVD edges from bisectors $\{p_i\}$ to the centroid. Each new GVD edge is given the two labels of the incident octree edge. \protect \subref {fig:bisector3} After finding the 2D GVD on its faces, the 3D cell fits triangles from 2D edges to the centroid. \relax }{figure.caption.6}{}}
\@writefile{brf}{\backcite{natarajan1994generating,nielson1991asymptotic,sohn2007topology}{{3}{6}{figure.caption.5}}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Results and applications}{3}{section.7}}
\citation{cao2010parallel,fischer2006fast,hsieh2005simple,rong2007variants,sud2006interactive,sud2006fast,hoff1999fast,wu2008gpu,yin2011fast}
\citation{boada2008approximations}
\citation{laine2011efficient}
\citation{baert2013out,bastos2008gpu,crassin2009gigavoxels,lefebvre2007compressed,strain1999fast}
\citation{laine2011efficient}
\citation{laine2011efficient}
\citation{canny1988simplified,thrun1998learning,hoff2000interactive,vachhani2011mobile}
\citation{masehian2007classic,raja2012optimal}
\citation{hoff2000interactive,masehian2007classic}
\citation{garrido2006path}
\citation{foskey2001voronoi}
\citation{hoff2000interactive,foskey2001voronoi,garrido2006path}
\citation{garrido2006path}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Comparison to other methods}{4}{subsection.7.1}}
\@writefile{brf}{\backcite{cao2010parallel,fischer2006fast,hsieh2005simple,rong2007variants,sud2006interactive,sud2006fast,hoff1999fast,wu2008gpu,yin2011fast}{{4}{7.1}{subsection.7.1}}}
\@writefile{brf}{\backcite{boada2008approximations}{{4}{7.1}{subsection.7.1}}}
\@writefile{brf}{\backcite{laine2011efficient}{{4}{7.1}{subsection.7.1}}}
\@writefile{brf}{\backcite{baert2013out,bastos2008gpu,crassin2009gigavoxels,lefebvre2007compressed,strain1999fast}{{4}{7.1}{subsection.7.1}}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Path planning}{4}{subsection.7.2}}
\newlabel{sec:path-planning}{{7.2}{4}{Path planning}{subsection.7.2}{}}
\@writefile{brf}{\backcite{canny1988simplified,thrun1998learning,hoff2000interactive,vachhani2011mobile}{{4}{7.2}{subsection.7.2}}}
\@writefile{brf}{\backcite{masehian2007classic,raja2012optimal}{{4}{7.2}{subsection.7.2}}}
\@writefile{brf}{\backcite{hoff2000interactive,masehian2007classic}{{4}{7.2}{subsection.7.2}}}
\@writefile{brf}{\backcite{garrido2006path}{{4}{7.2}{subsection.7.2}}}
\@writefile{brf}{\backcite{foskey2001voronoi}{{4}{7.2}{subsection.7.2}}}
\@writefile{brf}{\backcite{hoff2000interactive,foskey2001voronoi,garrido2006path}{{4}{7.2}{subsection.7.2}}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Comparison of our octree building to the sparse voxel octree method of Laine and Karras\nobreakspace  {}\cite  {laine2011efficient}. We used four datasets, each at three octree levels and compared seconds per Mb of octree memory used. Laine's algorithm was run on a Windows 7 desktop with 3.5 GHz processor, 16 GB memory, and NVIDIA GeForce GTX 660 graphics card. \relax }}{4}{figure.caption.8}}
\@writefile{brf}{\backcite{laine2011efficient}{{4}{6}{figure.caption.8}}}
\newlabel{fig:compare}{{6}{4}{Comparison of our octree building to the sparse voxel octree method of Laine and Karras~\shortcite {laine2011efficient}. We used four datasets, each at three octree levels and compared seconds per Mb of octree memory used. Laine's algorithm was run on a Windows 7 desktop with 3.5 GHz processor, 16 GB memory, and NVIDIA GeForce GTX 660 graphics card. \relax }{figure.caption.8}{}}
\newlabel{fig:bunny1}{{7a}{4}{Subfigure 7a}{subfigure.7.1}{}}
\newlabel{sub@fig:bunny1}{{(a)}{a}{Subfigure 7a\relax }{subfigure.7.1}{}}
\newlabel{fig:bunny2}{{7b}{4}{Subfigure 7b}{subfigure.7.2}{}}
\newlabel{sub@fig:bunny2}{{(b)}{b}{Subfigure 7b\relax }{subfigure.7.2}{}}
\newlabel{fig:bunny3}{{7c}{4}{Subfigure 7c}{subfigure.7.3}{}}
\newlabel{sub@fig:bunny3}{{(c)}{c}{Subfigure 7c\relax }{subfigure.7.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces The method pipeline in 3D. \subref {fig:bunny1} Four bunnies placed in proximity. \subref {fig:bunny2} The octree with appropriately-labeled vertices. \subref {fig:bunny3} The constructed GVD. \relax }}{4}{figure.caption.9}}
\newlabel{fig:bunny}{{7}{4}{The method pipeline in 3D. \protect \subref {fig:bunny1} Four bunnies placed in proximity. \protect \subref {fig:bunny2} The octree with appropriately-labeled vertices. \protect \subref {fig:bunny3} The constructed GVD. \relax }{figure.caption.9}{}}
\@writefile{brf}{\backcite{garrido2006path}{{4}{7.2}{subsection.7.2}}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Table of octree/GVD computation statistics and timings on datasets that are unmanageable using other methods. Columns are: \emph  {objects} - the number of objects in the dataset; \emph  {object $\Delta $s} - the number of line segments (2D) or triangles (3D) of all objects in the dataset; \emph  {octree depth} - required octree depth in order to resolve objects; \emph  {octree cells} - total number of leaf octree cells; \emph  {octree memory} - amount of memory used by the octree; \emph  {GVD (sec)} - seconds to perform all steps of GVD computation; \emph  {GVD $\Delta $s} - number of line segments (2D) or triangles (3D) in the GVD.\relax }}{5}{table.caption.7}}
\newlabel{tab:timings}{{1}{5}{Table of octree/GVD computation statistics and timings on datasets that are unmanageable using other methods. \red {Columns are: \emph {objects} - the number of objects in the dataset; \emph {object $\Delta $s} - the number of line segments (2D) or triangles (3D) of all objects in the dataset; \emph {octree depth} - required octree depth in order to resolve objects; \emph {octree cells} - total number of leaf octree cells; \emph {octree memory} - amount of memory used by the octree; \emph {GVD (sec)} - seconds to perform all steps of GVD computation; \emph {GVD $\Delta $s} - number of line segments (2D) or triangles (3D) in the GVD.}\relax }{table.caption.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces A pipes dataset with 392 objects and 207K object triangles. The octree was subdivided to level 10 for a total of 1.8m octree cells. The GVD separates even the nuts from the bolts (upper right). \relax }}{5}{figure.caption.10}}
\newlabel{fig:pipes}{{8}{5}{A pipes dataset with 392 objects and 207K object triangles. The octree was subdivided to level 10 for a total of 1.8m octree cells. The GVD separates even the nuts from the bolts (upper right). \relax }{figure.caption.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3}Proximity queries}{5}{subsection.7.3}}
\newlabel{sec:proximity}{{7.3}{5}{Proximity queries}{subsection.7.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4}Exploded diagrams}{5}{subsection.7.4}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Conclusions}{5}{section.8}}
\newlabel{fig:heart1}{{9a}{5}{Subfigure 9a}{subfigure.9.1}{}}
\newlabel{sub@fig:heart1}{{(a)}{a}{Subfigure 9a\relax }{subfigure.9.1}{}}
\newlabel{fig:heart2}{{9b}{5}{Subfigure 9b}{subfigure.9.2}{}}
\newlabel{sub@fig:heart2}{{(b)}{b}{Subfigure 9b\relax }{subfigure.9.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Heart defibrillation dataset showing support for multiple connected components. \subref {fig:heart1} The blue and purple objects have multiple components. \subref {fig:heart2} The GVD naturally handles multiple components of an object. Portions of the GVD are clipped away for visualization. \relax }}{5}{figure.caption.11}}
\newlabel{fig:heart}{{9}{5}{Heart defibrillation dataset showing support for multiple connected components. \protect \subref {fig:heart1} The blue and purple objects have multiple components. \protect \subref {fig:heart2} The GVD naturally handles multiple components of an object. Portions of the GVD are clipped away for visualization. \relax }{figure.caption.11}{}}
\bibstyle{eg-alpha-doi}
\bibdata{paper}
\bibcite{bastos2008gpu}{BC08}
\bibcite{boada2008approximations}{BCMAS08}
\bibcite{boada2002voronoi}{BCS02}
\bibcite{bedorf2012sparse}{BGPZ12}
\bibcite{baert2013out}{BLD13}
\bibcite{breen19983d}{BMW98}
\bibcite{boissonnat2006curved}{BWY06}
\bibcite{canny1988simplified}{CD88}
\bibcite{crassin2009gigavoxels}{CNLE09}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Path planning in 2D. We built a quadtree over hundreds of objects ranging in size and spacing over orders of magnitude. The quadtree reached level 24 before the closest spacings were resolved. The shortest-cost path between two points is shown in blue. The rightmost figure shows the quadtree in gray and GVD boundary complex in red at 80,000x magnification.\relax }}{6}{figure.caption.12}}
\newlabel{fig:path}{{10}{6}{Path planning in 2D. We built a quadtree over hundreds of objects ranging in size and spacing over orders of magnitude. The quadtree reached level 24 before the closest spacings were resolved. The shortest-cost path between two points is shown in blue. The rightmost figure shows the quadtree in gray and GVD boundary complex in red at 80,000x magnification.\relax }{figure.caption.12}{}}
\@writefile{toc}{\contentsline {section}{References}{6}{section.8}}
\bibcite{cao2010parallel}{CTMT10}
\bibcite{de2008computational}{DBCVK08}
\bibcite{etzion2002computing}{ER02}
\bibcite{fischer2006fast}{FG06}
\bibcite{foskey2001voronoi}{FGLM01}
\bibcite{frisken2002simple}{FP02}
\bibcite{frisken2000adaptively}{FPRJ00}
\bibcite{gargantini1982effective}{Gar82}
\bibcite{garrido2006path}{GMAM06}
\bibcite{govindaraju2003cullide}{GRLM03}
\bibcite{hoff2000interactive}{HICK{$^{*}$}00}
\bibcite{hoff1999fast}{HIKL{$^{*}$}99}
\bibcite{hoff2001fast}{HIZLM01}
\bibcite{hsieh2005simple}{HT05}
\bibcite{jones20063d}{JBS06}
\bibcite{karavelas2004robust}{Kar04}
\bibcite{karras2012maximizing}{Kar12}
\bibcite{kim2014exact}{KL14}
\bibcite{lavender1992voronoi}{LBD{$^{*}$}92}
\bibcite{lorensen1987marching}{LC87}
\bibcite{lee1982medial}{Lee82}
\bibcite{lefebvre2007compressed}{LH07}
\bibcite{laine2011efficient}{LK11}
\bibcite{lin2003collision}{LM03}
\bibcite{mishchenko2010ultrastructural}{MHS{$^{*}$}10}
\bibcite{masehian2007classic}{MS07}
\bibcite{natarajan1994generating}{Nat94}
\bibcite{nielson1991asymptotic}{NH91}
\bibcite{park2010cuda}{PLKK10}
\bibcite{qu2004feature}{QZS{$^{*}$}04}
\bibcite{raja2012optimal}{RP12}
\bibcite{rong2007variants}{RT07}
\bibcite{sohn2007topology}{SB07}
\bibcite{sud2006fast}{SGG{$^{*}$}06}
\bibcite{sud2006interactive}{SGGM06}
\bibcite{strain1999fast}{Str99}
\bibcite{thrun1998learning}{Thr98}
\bibcite{teschner2005collision}{TKH{$^{*}$}05}
\bibcite{teichmann1997polygonal}{TT97}
\bibcite{vachhani2011mobile}{VMS11}
\bibcite{vleugels1998approximating}{VO98}
\bibcite{wu2008gpu}{WLXZ08}
\bibcite{yin2011fast}{YLW11}
\bibcite{zhou2011data}{ZGHG11}
